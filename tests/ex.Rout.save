
R : Copyright 2003, The R Foundation for Statistical Computing
Version 1.9.0 Under development (unstable) (2003-12-29), ISBN 3-900051-00-3

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for a HTML browser interface to help.
Type 'q()' to quit R.

> library(fracdiff)
> 
> .proctime00 <- proc.time()
> 
> x1 <-  fracdiff.sim( 5000, ar = .2, ma = -.4, d = .3)
> (fd1 <- fracdiff( x1$series, nar = length(x1$ar), nma = length(x1$ma)))
$log.likelihood
[1] -7113.292

$d
[1] 0.2967153

$ar
[1] 0.2151955

$ma
[1] -0.370324

$covariance.dpq
                d           ar1           ma1
d    0.0002757974 -0.0004211886 -0.0001385788
ar1 -0.0004211886  0.0013276524  0.0007585484
ma1 -0.0001385788  0.0007585484  0.0006754559

$stderror.dpq
[1] 0.01660715 0.03643697 0.02598953

$correlation.dpq
           [,1]       [,2]       [,3]
[1,]  1.0000000 -0.6960482 -0.3210726
[2,] -0.6960482  1.0000000  0.8010186
[3,] -0.3210726  0.8010186  1.0000000

$h
[1] 7.496125e-05

$d.tol
[1] 0.0001220703

$M
[1] 100

$hessian.dpq
             d       ar1       ma1
d   -10086.495 -5629.780  4252.959
ar1  -5629.780 -5244.032  4734.112
ma1   4252.959  4734.112 -5924.418

> 
> fd1. <- fracdiff.var(x1$series, fd1, h = fd1$h / 8)
> fd1.[c("h", "covariance.dpq", "stderror.dpq", "correlation.dpq", "hessian.dpq")]
$h
[1] 9.370156e-06

$covariance.dpq
                d           ar1           ma1
d    8.214847e-06 -1.254544e-05 -4.127681e-06
ar1 -1.254544e-05  7.035863e-04  5.532191e-04
ma1 -4.127681e-06  5.532191e-04  6.078987e-04

$stderror.dpq
[1] 0.002866155 0.026525202 0.024655602

$correlation.dpq
            [,1]       [,2]        [,3]
[1,]  1.00000000 -0.1650165 -0.05841048
[2,] -0.16501653  1.0000000  0.84590743
[3,] -0.05841048  0.8459074  1.00000000

$hessian.dpq
              d       ar1       ma1
d   -128191.457 -5629.780  4252.959
ar1   -5629.780 -5244.032  4734.112
ma1    4252.959  4734.112 -5924.418

> 
> fd1u <- fracdiff.var(x1$series, fd1, h = fd1$h * 8)
> fd1u[c("h", "covariance.dpq", "stderror.dpq", "correlation.dpq", "hessian.dpq")]
$h
[1] 0.00059969

$covariance.dpq
                d           ar1           ma1
d    0.0005616528 -0.0008577380 -0.0002822118
ar1 -0.0008577380  0.0019943371  0.0009779002
ma1 -0.0002822118  0.0009779002  0.0007476268

$stderror.dpq
[1] 0.02369921 0.04465800 0.02734276

$correlation.dpq
           [,1]      [,2]       [,3]
[1,]  1.0000000 -0.810441 -0.4355107
[2,] -0.8104410  1.000000  0.8008531
[3,] -0.4355107  0.800853  1.0000000

$hessian.dpq
            d       ar1       ma1
d   -8241.110 -5629.782  4252.960
ar1 -5629.782 -5244.032  4734.112
ma1  4252.960  4734.112 -5924.418

> 
> x2 <-  fracdiff.sim( 2048, ar = .8, ma = -.4, d = .3)# -> NA's and problems
> (fd2 <- fracdiff( x2$series, nar = length(x2$ar), nma = length(x2$ma)))
$log.likelihood
[1] -2865.027

$d
[1] 0.3083657

$ar
[1] 0.7759254

$ma
[1] -0.4122344

$covariance.dpq
                d           ar1           ma1
d    9.466911e-05 -0.0001621193 -1.861872e-05
ar1 -1.621193e-04  0.0007842150  1.875307e-04
ma1 -1.861872e-05  0.0001875307  2.426153e-04

$stderror.dpq
[1] 0.009729805 0.028003840 0.015576112

$correlation.dpq
           [,1]       [,2]       [,3]
[1,]  1.0000000 -0.5949946 -0.1228533
[2,] -0.5949946  1.0000000  0.4299280
[3,] -0.1228533  0.4299280  1.0000000

$h
[1] 3.019850e-05

$d.tol
[1] 0.0001220703

$M
[1] 100

$hessian.dpq
             d       ar1       ma1
d   -16919.997 -3910.062  1723.833
ar1  -3910.062 -2467.884  1607.499
ma1   1723.833  1607.499 -5231.987

> 
> fd2. <- fracdiff.var(x2$series, fd2, h = fd2$h / 8)
> fd2.[c("h", "covariance.dpq", "stderror.dpq", "correlation.dpq", "hessian.dpq")]
$h
[1] 3.774813e-06

$covariance.dpq
                d           ar1           ma1
d    1.151738e-06 -1.972332e-06 -2.265140e-07
ar1 -1.972332e-06  5.099660e-04  1.560344e-04
ma1 -2.265140e-07  1.560344e-04  2.389980e-04

$stderror.dpq
[1] 0.001073190 0.022582426 0.015459562

$correlation.dpq
            [,1]       [,2]        [,3]
[1,]  1.00000000 -0.0813828 -0.01365278
[2,] -0.08138280  1.0000000  0.44694336
[3,] -0.01365278  0.4469434  1.00000000

$hessian.dpq
              d       ar1       ma1
d   -874610.268 -3910.062  1723.833
ar1   -3910.062 -2467.884  1607.499
ma1    1723.833  1607.499 -5231.987

> 
> fd2u <- fracdiff.var(x2$series, fd2, h = fd2$h * 8)
Warning message: 
unable to compute correlation matrix in: switch(temp$info, warning("warning in gamma function"), warning("singular Hessian"),  
> fd2u[c("h", "covariance.dpq", "stderror.dpq", "correlation.dpq", "hessian.dpq")]
$h
[1] 0.0002415880

$covariance.dpq
                d           ar1          ma1
d   -3.523230e-04  6.033475e-04 6.929195e-05
ar1  6.033475e-04 -5.266347e-04 3.698510e-05
ma1  6.929195e-05  3.698510e-05 2.253257e-04

$stderror.dpq
[1] 0.00000000 0.00000000 0.01501085

$correlation.dpq
     [,1] [,2] [,3]
[1,]    0    0    0
[2,]    0    0    0
[3,]    0    0    0

$hessian.dpq
            d       ar1       ma1
d   -3518.587 -3910.063  1723.833
ar1 -3910.063 -2467.884  1607.499
ma1  1723.833  1607.499 -5231.987

> 
> ## Last Line:
> cat('Time elapsed: ', proc.time() - .proctime00,'\n')
Time elapsed:  1.22 0.04 1.27 0 0 
> 
